name: deploy to production (elastic beanstalk)

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'confirmar deploy para produ√ß√£o?'
        required: true
        default: 'sim'
        type: choice
        options:
          - sim
          - n√£o

jobs:
  deploy:
    name: build e deploy
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm == 'sim'

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: deploy no elastic beanstalk (zip upload)
        env:
          EB_APP_NAME: ${{ secrets.EB_APP_NAME }}
          EB_ENV_NAME: ${{ secrets.EB_ENV_NAME }}
          EB_S3_BUCKET: ${{ secrets.EB_S3_BUCKET }}
        run: |
          if [ -n "$EB_APP_NAME" ] && [ -n "$EB_ENV_NAME" ] && [ -n "$EB_S3_BUCKET" ]; then \
            VERSION_LABEL="${GITHUB_SHA}-${GITHUB_RUN_ID}" ; \
            zip -r release.zip . -x "node_modules/*" "dist/*" ".git/*" ".github/*" "coverage/*" && \
            aws s3 cp release.zip s3://$EB_S3_BUCKET/releases/${VERSION_LABEL}.zip && \
            aws elasticbeanstalk create-application-version --application-name "$EB_APP_NAME" \
              --version-label "${VERSION_LABEL}" --source-bundle S3Bucket=$EB_S3_BUCKET,S3Key=releases/${VERSION_LABEL}.zip || echo "vers√£o j√° existe, seguindo" ; \
            aws elasticbeanstalk update-environment --environment-name "$EB_ENV_NAME" \
              --version-label "${VERSION_LABEL}" ; \
          else \
            echo "vari√°veis do elastic beanstalk n√£o definidas, pulando" ; \
          fi

      - name: notificar sucesso
        if: success()
        run: |
          echo "‚úÖ deploy do Elastic Beanstalk disparado com sucesso!"
          echo "üß± aplica√ß√£o: ${{ secrets.EB_APP_NAME }}"
          echo "üå± ambiente: ${{ secrets.EB_ENV_NAME }}"
          echo "üè∑Ô∏è vers√£o: ${GITHUB_SHA}"

      - name: notificar falha
        if: failure()
        run: |
          echo "‚ùå falha no deploy"
          exit 1

